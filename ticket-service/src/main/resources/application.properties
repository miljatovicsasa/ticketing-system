spring.application.name=ticket-service
spring.main.banner-mode=off

# Port aplikacije
server.port=${SERVER_PORT:9090}

# PostgreSQL datasource
spring.datasource.url=${SPRING_DATASOURCE_URL:jdbc:postgresql://localhost:5432/ticketing}
spring.datasource.username=${SPRING_DATASOURCE_USERNAME:postgres}
spring.datasource.password=${SPRING_DATASOURCE_PASSWORD:Pass123!}
spring.jpa.properties.hibernate.default_schema=event
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true

# Kafka konfiguracija
spring.kafka.bootstrap-servers=${SPRING_KAFKA_BOOTSTRAP_SERVERS:localhost:9092}
spring.kafka.consumer.group-id=ticket-service-group
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer

# Kafka constants
kafka.ticket.topic=ticket-purchase
kafka.ticket.group-id=ticket-service-group

# Kafka consumer config
spring.kafka.consumer.max-poll-records=1

# Kafka listener config
spring.kafka.listener.ack-mode=manual
spring.kafka.listener.concurrency=1
spring.kafka.listener.type=single

# Retry config
spring.kafka.listener.retry.enabled=true
spring.kafka.listener.retry.max-attempts=3
spring.kafka.listener.retry.interval=2000

# Dead-letter topic
spring.kafka.listener.error-handler.dead-letter.topic=ticket-purchase.DLT
